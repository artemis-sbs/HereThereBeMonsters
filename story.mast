import map_art.mast
import debug.mast
#
# This has a few python functions
# that group command code
#
import here_helpers.py

# This script defines the player ship
PLAYER_CREATE_DEFAULT = False
shared artemis_id = None


shared whale_watcher_face = random_arvonian()
shared whale_watcher_id = None
shared whale_watcher_name = "Unknown ship"

shared dauntless_face = random_terran(civilian=True)
shared dauntless_id = None




shared ensign_rachel = lifeform_spawn("Ensign Rachel", random_terran_female(), "crew", None)
shared medical_bay_doctor = lifeform_spawn("Doctor Grison", random_terran_male(), "crew", None)
shared tsn_command = lifeform_spawn("TSN Command", random_terran(), "command", None)



# Mission setting for playing audio files
shared HTBM_AUDIO_FILE_ENABLED = True
#
# This is a variable hold the task running main story
# debug.mast adds buttons to comms 
# to help debug by jumping to that part of the story
shared main_story_task = None

//shared/signal/create_player_ships
# Script creates the player ships
### TODO: Why do I have to put shared here, why did it not find the right scope
    shared artemis_id = to_id(player_spawn(98000, 0, 98000, "Artemis", "tsn", "tsn_light_cruiser"))
# This puts NPC crew on the Artemis
    ensign_rachel.host = artemis_id
    medical_bay_doctor.host = artemis_id
# Call this to enable docking on the player
# Are there any stations?
    #docking_set_docking_logic(player.id, role(player.side) & role("station"), docking_dock_with_friendly_station)
    ->END


# Use for startup logic
@map/here_there_be_monsters "Here there be Monsters"
" Investigate a remote sector of space with no station support in a TSN Light Cruiser. 
" Ships have gone missing here and you were sent to investigate. 
" Keep an eye out and find out whats happening to those ships.

# This is used in debugging to allow testing to jump 
    shared main_story_task = mast_task
# 
# A tile map can be any size of the map
# and you can use it to fill 
    tile_map = maps_tile_map_create(0, 100_000, 1_000) 

# Using nebula as cards in a deck
    nebula_deck = maps_deck_create()
    nebula_deck.add_card(prefab_terrain_nebula_sphere, {"density_scale": 1, "cluster_color": 1})
# Draw the skull and cross bones    
    tile_map.map_deck("n", nebula_deck)

    black_hole_deck = maps_deck_create()
    black_hole_deck.add_card(prefab_black_hole, {"gravity_radius": 10_000})
# Draw the skull and cross bones    
    tile_map.map_deck("B", black_hole_deck)
# This will draw the art as is
    res = await tile_map.fill(map_art, x_count=100)
# the res should just be the black holes
# but just in case, make sure its just black holes
    res &= role("black_hole")

    link(artemis_id,"extra_scan_source" ,res)    


#
# Random asteroids
#
# This layer is 10_000 x 10_0000 grid
    tile_map = maps_tile_map_create(0, 100_000, 10_000) 
# Using asteroid as cards in a deck
    asteroid_deck = maps_deck_create()
    asteroid_deck.add_card(prefab_terrain_asteroid_sphere)
# create a string that is 100 values
# . means empty space
    asteroid_string = "a"* 50 + "."* 50
# shuffle sting randomize it
    asteroid_string = shuffle_string(asteroid_string)
# Place them on the grid 
    tile_map.map_deck("a", asteroid_deck)
    tile_map.fill(asteroid_string, x_count=10)

    #task_schedule(spawn_players)
    

/*  Mission structure

* Mission Briefing

* Systems check in

* Distress call One
-- arrive at luxury liner
-- retrieve recording
-- retrieve shuttle
-- medical bay one
-- Update TSN Command
* distress_call_two
-- arrive at dauntless
-- retrieve log
-- Strange Object



* medical bay two (escape)

*/

#######################################
# === scene_mission_briefing_start
#######################################    
    
--- need_comms_console

## Wait for a comms console to be around
    await delay_sim(5)
    cc = gui_console_clients("comms")
    jump need_comms_console if len(cc)==0
    await delay_sim(10)

--- send_comms_console_message

    cc = gui_console_clients("comms")
    jump send_comms_console_message if len(cc)==0

    choice = here_comms_incoming_info_message("Message from TSN Command", artemis_id, tsn_command, title="Incoming message", button="Play Message", time=10)

# The variable choice is a "Promise" that will
# get a result when the button is pressed
# 
    pressed = await choice
    # print(pressed.value)
    # print(pressed.client_id)
#
# This is triggered by a message button in the info panel on COMMS
#
#######################################
#--- mission_briefing_message
#######################################
    message = """This is the "Skulls Refuge Nebula" and looks like you've drawn the short straw for tonights patrol. You are on the outskirts of Terran space, and the twin black holes cause havoc with our long range sensors so we don't know much about this sector.  Several ships traversing this sector have gone missing the last few months. Be on alert and find out whats happen to our ships."""

    here_receive_info_message(message, artemis_id, tsn_command, title="Mission Briefing", time=32, audio="audio/SD01C0070")


##########################################################################################
# Distress Call One

# delay until the next scene
    await delay_sim(60)
#######################################
--- scene_distress_call_one
#######################################
    whale_watcher_sd = to_id(npc_spawn(90_000, 10, 60_000, whale_watcher_name, "arvonian", "luxury_liner", "behav_do_nothing"))
    shared whale_watcher_id = to_id(whale_watcher_sd)
    ww_obj = to_object(whale_watcher_sd)
    set_face(whale_watcher_id, whale_watcher_face)
    #
    # Make it spin and blink
    #

    ww_obj.engine_object.steer_yaw =  0.003
    ww_obj.engine_object.steer_pitch = -0.002
    ww_obj.engine_object.steer_roll =  0.001
    ww_obj.engine_object.blink_state = -5
# Let us see it? Or should science see it
    link(artemis_id,"extra_scan_source" ,whale_watcher_id)


    message = "Incoming Distress Signal. Check with captain to view on main screen."    
    choice = here_comms_incoming_info_message(message, artemis_id, whale_watcher_id, title="Distress Call", button="Accept Message", time=12)
# Wait for button press
    pressed = await choice
# Create a luxury liner


    message = """This is the Arvonian luxury liner "Whale Watcher 1".  We are under attack from an Unknown vessel... Engines...Boarding... Please Help!....."""
    here_receive_info_message(message, artemis_id, whale_watcher_id, title="Distress Signal", time=10, audio="audio/SD01C0139")

    await delay_sim(10)
    here_info_panel_clear_comms()

    whale_watcher_name = "Whale Watcher 1"
    ww = to_object(whale_watcher_id)
    if ww is not None:
        ww.name = whale_watcher_name
#######################################
# --- approach_whale_watcher
#######################################
    d = 100_000
    for x while d>6000:
        ->END if to_object(artemis_id) is None or to_object(whale_watcher_id) is None
        d = sbs.distance_id(artemis_id, whale_watcher_id)
        await delay_sim(3)
# Keep waiting until artemis is close to the luxury liner    
    #jump approach if d > 6000
# It is now close enough
--- salvage
# Engin Rachel reports recovery
    message = "We scanned the ship and were able to salvage a captains log recording from the wreckage"
    choice = here_comms_incoming_info_message(message,artemis_id,ensign_rachel, title="Report on scan", button="Recover Recording", time=20)

    pressed = await choice
#######################################
#--- retrieve_recording
#######################################
--- shuttle
    message = "Such a wondrous sight these space whales are so majestic. <static>  You there I don't believe we met."
    here_receive_info_message(message, artemis_id, whale_watcher_id, title="Log playback", time=12, audio="audio/SD01C0135")
    
    await delay_sim(13)


    #<create type="genericMesh" x="90000.0" y="0.0" z="61000.0" name="Damaged Shuttle" meshFileName="dat\TSNShuttle.dxs" textureFileName="dat\LightCruiser_Diffuse.png"/>
    shared damaged_shuttle_id = to_id(npc_spawn(90000.0,0.0,61000.0, "Damaged Shuttle", "arvonian", "tsn_shuttle", "npc_no_nothing"))
    

    await delay_sim(10)
    message = "Damaged Shuttle located. One life sign onboard. Vitals are weak. Suggest we report it to TSN Command"
    choice = here_comms_incoming_info_message(message, artemis_id, ensign_rachel, title="Shuttle located", button="Contact TSN Command", time=20)
    
    pressed = await choice
    here_info_panel_clear_comms()

    message = "Artemis to TSN Command, we are sending you the Whale Watcher Log. We have also discovered a shuttle with one life sign. Please Advise."
    with comms_override(artemis_id,tsn_command):
        comms_transmit(message, "Update on shuttle")

    await delay_sim(10)

    message = "Such a shame Tourism is very risky in this sector of space. Retrieve the shuttle and check for Survivors."
    with comms_override(artemis_id, tsn_command):
        comms_receive(message, "Orders")



#######################################
#--- retrieve_shuttle
#######################################

    d = 2000
## scene_pick up shuttle
## This should maybe be enhanced to have Weapons tractor beam the shuttle
### That would be a cool element
# Wait for artemis to get close to the shuttle
    for x while d > 1000:
        await delay_sim(4)
        if to_object(artemis_id) is None or to_object(damaged_shuttle_id) is None:
            # Probably signal end of game
            ->END

        d = sbs.distance_id(artemis_id, damaged_shuttle_id)

# OK now the shuttle is close, take it off the board
    shuttle = to_object(damaged_shuttle_id)
    if shuttle is not None:
        shuttle.delete_object()

# Show medical bay update        
    await delay_sim(10)
#############################    
--- medical_bay_update_one
#############################
# This goes to just comms
    message = "Incoming message from medical bay"
    choice = here_comms_incoming_info_message(message,artemis_id, medical_bay_doctor,title="Report on shuttle", button="Accept Message", time = 12)

# Wait for button press
    pressed = await choice
# medical bay update 1
    message = "We have retrieved 1 Arvonian survivor from the Escape Pod.  They are undergoing medical treatment now. "
    here_receive_info_message(message, artemis_id, medical_bay_doctor,  title="Report on lifeform", time=12, audio="audio/SD02C0166")

    await delay_sim(13)

    consoles = linked_to(artemis_id, "consoles") & all_roles("console, comms")
    message = "Update TSN Command about the Arvonian survivor."
    choice = gui_info_panel_send_message(consoles, message, title="Next steps", icon_index=1, button="Update TSN Command", time=0)
        
    pressed = await choice
## Clear message panel    
    here_info_panel_clear_comms()

    message = "Artemis to TSN Command, We have recovered one life form alive and they are in our medical bay receiving treatment."
    with comms_override(artemis_id, tsn_command):
        comms_transmit(message, "Update on Lifeform.")


    await delay_sim(10)
# TSN Update survivor
    message = "Good Work. At least we saved one poor soul. Keep a look out try and find out what happen. "
    with comms_override(artemis_id, tsn_command):
        comms_receive(message, "Response on Lifeform")

# AND.....SCENE

    await delay_sim(200)
##########################################################################################
# Distress Call Two
############################
--- scene_distress_call_two
############################
    # create the 
    #x="48000.0" y="10.0" z="70000.0"
    dauntless_sd = npc_spawn(48_000, 10, 70_000, "Unknown Ship", "civ", "cargo_ship", "behav_do_nothing")
    shared dauntless_id = to_id(dauntless_sd)
    dauntless_obj = to_object(dauntless_sd)
    set_face(dauntless_id, dauntless_face)
    link(artemis_id, "extra_scan_source", dauntless_id)
    #
    # Make it spin and blink
    #
    dauntless_obj.engine_object.steer_yaw =  0.003
    dauntless_obj.engine_object.steer_pitch = -0.002
    dauntless_obj.engine_object.steer_roll =  0.001
    dauntless_obj.engine_object.blink_state = -5
    #
    # <create type="Anomaly" pickupType="2" x="49000.0" y="50.0" z="70000.0"/>
    # <create type="Anomaly" pickupType="0" x="47000.0" y="-50.0" z="70000.0"/>
    #



    message = "Incoming Distress Signal. Check with captain to view on main screen"
    choice = here_comms_incoming_info_message(message, artemis_id, dauntless_id, title="Distress Call", button="Accept Message", time=12)

# Wait for button press
    pressed = await choice



    message = """This is the Terran Bulk Cargo "Dauntless".  We are under attack from an Unknown vessel... Engines...Boarding... Please Help!....."""
    here_receive_info_message(message, artemis_id, dauntless_id, title="Distress Call", time=14, audio="audio/SD01C0037")

    daunt = to_object(dauntless_id)
    if daunt is not None:
        daunt.name = "Dauntless"

    await delay_sim(14)
    here_info_panel_clear_comms()

    
## Loop until close to dauntless
    d = 100_000
    for x while d>6000:
        ->END if to_object(artemis_id) is None or to_object(dauntless_id) is None
        d = sbs.distance_id(artemis_id, dauntless_id)
        await delay_sim(3)

## Maybe enhancement that weapons or science needs to scan

    await delay_sim(5)

    message = "We scanned the ship and were are able to salvage a recording from the wreckage"
    choice = here_comms_incoming_info_message(message, artemis_id, ensign_rachel, title="Scan report", button="Recover Dauntless Log", time=12)

    pressed = await choice

    message = """What is it? Not sure sir it looks like a beacon of some sort. Take us in for a closer look, there might be some salvage worth gathering?. Engineering, why did we lose power to engines? Captain, unknown vessel appeared behind us. Get us out of here! Can?t sir, something is draining our engines."""
    here_receive_info_message(message, artemis_id, dauntless_id, title="Log playback", time=20, audio="audio/SD01C0035")
    await delay_sim(20)
    here_info_panel_clear_comms()

--- strange_object
    # x="48500.0" y="150.0" z="69500.0"
    strange_object_sd = npc_spawn(48_500, 150, 69_500, "Strange Object", None, "alien_small_3b", "behav_pickup")
    shared strange_object_id = to_id(strange_object_sd)
    strange_object_obj = to_object(strange_object_sd)
    #
    # Make it spin and blink
    #
    strange_object_obj.engine_object.steer_yaw =  0.003
    strange_object_obj.engine_object.steer_pitch = -0.002
    strange_object_obj.engine_object.steer_roll =  0.001
    strange_object_obj.engine_object.blink_state = -3

    message = "Ensign Rachel Reporting: That Strange Object could give us clues to what happen to the Dauntless"
    here_comms_incoming_info_message(message, artemis_id, ensign_rachel, time=12)

    await delay_sim(12)
    here_info_panel_clear_comms()

## Loop until close to strange object
    for x while sbs.distance_id(artemis_id, strange_object_id ) > 1000:
        ->END if to_object(artemis_id) is None or to_object(strange_object_id ) is None
        await delay_sim(3)

#
# TODO: Tractor beam by weapons
#       Science needs to scan it?
#
    for x while sbs.distance_id(artemis_id, strange_object_id)> 1000:
        await delay_sim(4)
        if to_object(artemis_id) is None or to_object(strange_object_id) is None:
            # Probably signal end of game
            ->END

# OK now the shuttle is close, take it off the board
    strange = to_object(strange_object_id)
    if strange is not None:
        strange.delete_object()

--- strange_object_finish
    message = """Upon further study this Beacon is some sort of Warp field disruptor. We call it a Web Generator. You cannot travel at warp near it but impulse power should be unaffected. Contact TSN Command about the Web Generator."""
    choice = here_comms_incoming_info_message(message, artemis_id, ensign_rachel, title="Strange object Report", button="Contact TSN Command", time=12)
    
    pressed = await choice
    here_info_panel_clear_comms()

    with comms_override(ensign_rachel, tsn_command):
        comms_transmit("This Beacon is some sort of Warp field disruptor. We call it a Web Generator. You cannot travel at warp near it but impulse power should be unaffected", "Important discovery")

    await delay_sim(20)
    START_TEXT = "To be Continued. You've reach the end of the story so far. More will be written"
    signal_emit("show_game_results")
    

